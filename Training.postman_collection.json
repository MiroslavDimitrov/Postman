{
	"info": {
		"_postman_id": "c2c7ffeb-20f1-4bb0-8128-cc657ddae199",
		"name": "Training",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5589560"
	},
	"item": [
		{
			"name": "Get status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status is UP\", () => {\r",
							"    const response = pm.response.json();//parse/deserialize jason file\r",
							"    console.log(response[\"status\"]);//version 1\r",
							"    console.log(response.status);//version 2 --> more useful\r",
							"    pm.expect(1).to.eql(1);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/status",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all tools",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"const tools = response.filter((tool) => tool.inStock === true);//all that is in stock\r",
							"const tool = tools[0];//first element that is available\r",
							"\r",
							"if(tool){\r",
							"    pm.globals.set(\"toolId\", tool.id);//set global value\r",
							"}\r",
							"\r",
							"pm.test(\"Tool found\", () => {\r",
							"    pm.expect(tool).to.be.an('object');//assert that is trully an object\r",
							"    pm.expect(tool.inStock).to.eql(true);\r",
							"    pm.expect(tool.category).to.eql(\"electric-generators\");//assert that is the searched result\r",
							"    pm.expect(tool.inStock).to.be.true;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/tools?category=electric-generators",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"tools"
					],
					"query": [
						{
							"key": "category",
							"value": "electric-generators"
						},
						{
							"key": "available",
							"value": "true",
							"disabled": true
						}
					]
				},
				"description": "Training from Udemy /SoftServe doesn't allow connection/"
			},
			"response": []
		},
		{
			"name": "Get single tool",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The ID is the same\", () =>{\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response.id).to.eql(pm.globals.get('toolId'));\r",
							"    pm.expect(response[\"current-stock\"]).to.be.above(0);\r",
							"});\r",
							"\r",
							"//postman.setNextRequest(\"Create order\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{Base URL}}/tools/:toolId",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"tools",
						":toolId"
					],
					"variable": [
						{
							"key": "toolId",
							"value": "{{toolId}}"
						}
					]
				},
				"description": "Training from Udemy /SoftServe doesn't allow connection/"
			},
			"response": []
		},
		{
			"name": "Get all orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/orders?Authorization={{customerName}}",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "{{customerName}}"
						}
					]
				},
				"description": "Training from Udemy /SoftServe doesn't allow connection/"
			},
			"response": []
		},
		{
			"name": "Get single order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    if(pm.response.to.have.status(200)){\r",
							"        pm.response.to.have.status(200);\r",
							"    }\r",
							"    else{\r",
							"        pm.response.to.have(404);\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{Base URL}}/orders/:orderId?Authorization={{customerName}}",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "{{customerName}}"
						}
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.response.to.have.status(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"clientName\": \"Postman\",\r\n    \"clientEmail\": \"peshev_1980@abv.bg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}/api-clients",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"api-clients"
					]
				},
				"description": "Training from Udemy /SoftServe doesn't allow connection/"
			},
			"response": []
		},
		{
			"name": "Create order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"console.log(pm.collectionVariables.get(\"Token\"));\r",
							"const response = pm.response.json();\r",
							"console.log(response.orderId);\r",
							"\r",
							"pm.globals.set(\"orderId\", \"_TlBWvgBV9wfwCP0FTsXM\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n       \"toolId\": {{toolId}},\r\n       \"customerName\": \"{{$randomFullName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}/orders",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders"
					]
				},
				"description": "Training from Udemy /SoftServe doesn't allow connection/"
			},
			"response": []
		},
		{
			"name": "Delete order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/orders/:orderId",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "Miro",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "orderId",
							"value": "xY_wjS_J1DoowPpIuwa41"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"customerName\": \"MDT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}/orders/:orderId",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "KJMrTtrACD6NoU-1iK9ZA"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Base URL",
			"value": "https://simple-tool-rental-api.glitch.me"
		},
		{
			"key": "Token",
			"value": "9a36cead0fb353cc0f0a8f9373d13fba5c184447932454b329968da857ba95f9",
			"type": "string"
		}
	]
}